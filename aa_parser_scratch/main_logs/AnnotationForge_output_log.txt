
###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_2_11 annotationforge_release_2_12

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_2_11 annotationforge_release_2_12",
    "desc_release_old": "1.0.3",
    "desc_release_new": "1.2.2",
    "old_release_number": 0,
    "new_release_number": 1,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_2_12 annotationforge_release_2_13

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_2_12 annotationforge_release_2_13",
    "desc_release_old": "1.2.2",
    "desc_release_new": "1.4.4",
    "old_release_number": 1,
    "new_release_number": 2,
    "function_removals": 0,
    "function_additions": 1,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########

makeOrgPackage


##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_2_13 annotationforge_release_2_14

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_2_13 annotationforge_release_2_14",
    "desc_release_old": "1.4.4",
    "desc_release_new": "1.6.1",
    "old_release_number": 2,
    "new_release_number": 3,
    "function_removals": 0,
    "function_additions": 2,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########

makeChipPackage
makeInpDb


##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_2_14 annotationforge_release_3_1

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_2_14 annotationforge_release_3_1",
    "desc_release_old": "1.6.1",
    "desc_release_new": "1.10.1",
    "old_release_number": 3,
    "new_release_number": 4,
    "function_removals": 1,
    "function_additions": 0,
    "parameter_removals": 1,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 1
}

##########
Functions Removed
##########

createSimpleBimap


##########
Functions Added
##########



##########
Removed Non Default Parameters
##########

0.
{
  "old_function": {
    "name": "makeOrgPackageFromNCBI",
    "representation": "makeOrgPackageFromNCBI",
    "parameters": "function ( version , maintainer , author , outputDir = \".\" , tax_id , genus , species , NCBIFilesDir = NULL )",
    "body": "{ ## Arguement checking:  if (  !   .isSingleString (  version ) )   stop (  \"'version' must be a single string\" )  if (  !   .isSingleString (  maintainer ) )   stop (  \"'maintainer' must be a single string\" )  if (  !   .isSingleString (  author ) )   stop (  \"'author' must be a single string\" )  if (    outputDir !=  \".\" undefined     file.access (  outputDir ) [[  1 ] ] !=  0 )  {   stop (  \"Selected outputDir '\" ,  outputDir ,  \"' does not exist.\" ) }  if (  !   .isSingleString (  tax_id ) )   stop (  \"'tax_id' must be a single string\" )  if (  !   .isSingleString (  genus ) )   stop (  \"'genus' must be a single string\" )  if (  !   .isSingleString (  species ) )   stop (  \"'species' must be a single string\" )  if (  !   .isSingleStringOrNull (  NCBIFilesDir ) )   stop (  \"'NCBIFilesDir' argument needs to be a single string or NULL\" ) ## 'outputDir' is not passed to makeOrgDbFromNCBI(). Hence the db file ## is always created in \".\". Maybe that could be revisited.   makeOrgDbFromNCBI ( tax_id =  tax_id , genus =  genus , species =  species , NCBIFilesDir =  NCBIFilesDir )   dbName -   .generateOrgDbName (  genus ,  species )   dbfile -   paste (  dbName ,  \".sqlite\" , sep =  \"\" )   seed -   new (  \"AnnDbPkgSeed\" , Package =   paste (  dbName ,  \".db\" , sep =  \"\" ) , Version =  version , Author =  author , Maintainer =  maintainer , PkgTemplate =  \"ORGANISM.DB\" , AnnObjPrefix =  dbName , organism =   paste (  genus ,  species ) , species =   paste (  genus ,  species ) , biocViews =  \"annotation\" , manufacturerUrl =  \"no manufacturer\" , manufacturer =  \"no manufacturer\" , chipName =  \"no manufacturer\" )   makeAnnDbPkg (  seed ,  dbfile , dest_dir =  outputDir ) ## cleanup   file.remove (  dbfile ) } ",
    "filename": "NCBI_ftp.txt"
  },
  "new_function": {
    "name": "makeOrgPackageFromNCBI",
    "representation": "makeOrgPackageFromNCBI",
    "parameters": "function ( version , maintainer , author , outputDir = getwd ( ) , tax_id , genus = NULL , species = NULL , NCBIFilesDir = getwd ( ) , databaseOnly = FALSE , useDeprecatedStyle = FALSE )",
    "body": "{  if (   useDeprecatedStyle ==  TRUE )  {   dbname -   OLD_makeOrgPackageFromNCBI (  version ,  maintainer ,  author ,  outputDir ,  tax_id ,  genus ,  species ,  NCBIFilesDir ) } else  {   dbname -   NEW_makeOrgPackageFromNCBI (  version ,  maintainer ,  author ,  outputDir ,  tax_id ,  genus ,  species ,  NCBIFilesDir ,  databaseOnly ) } ## return handle to the db name  dbname } ",
    "filename": "NCBI_ftp.txt"
  }
}



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_1 annotationforge_release_3_2

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_1 annotationforge_release_3_2",
    "desc_release_old": "1.10.1",
    "desc_release_new": "1.12.2",
    "old_release_number": 4,
    "new_release_number": 5,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_2 annotationforge_release_3_3

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_2 annotationforge_release_3_3",
    "desc_release_old": "1.12.2",
    "desc_release_new": "1.14.2",
    "old_release_number": 5,
    "new_release_number": 6,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 1,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 1,
    "total_count": 1
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########

0.
{
  "old_function": {
    "name": "wrapBaseDBPackages",
    "representation": "wrapBaseDBPackages",
    "parameters": "function ( dbPath = \"/mnt/cpb_anno/mcarlson/proj/mcarlson/sqliteGen/annosrc/db/\" , destDir = \".\" , version )",
    "body": "{ #human.db0   vals -   list ( ANNOBJPREFIX =  \"human\" , ORGANISM =  \"Homo sapiens\" , SPECIES =  \"human\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Homo_sapiens\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_human.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_human.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #mouse.db0   vals -   list ( ANNOBJPREFIX =  \"mouse\" , ORGANISM =  \"Mus musculus\" , SPECIES =  \"mouse\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Mus_musculus\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_mouse.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_mouse.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #rat.db0   vals -   list ( ANNOBJPREFIX =  \"rat\" , ORGANISM =  \"Rattus norvegicus\" , SPECIES =  \"rat\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Rattus_norvegicus\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_rat.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_rat.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #fly.db0   vals -   list ( ANNOBJPREFIX =  \"fly\" , ORGANISM =  \"Drosophila melanogaster\" , SPECIES =  \"fly\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Drosophila_melanogaster\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_fly.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_fly.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #yeast.db0   vals -   list ( ANNOBJPREFIX =  \"yeast\" , ORGANISM =  \"Saccharomyces cerevisiae\" , SPECIES =  \"yeast\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Saccharomyces_cerevisiae\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_yeast.sqlite\" , sep =  \"\" ) #  chipMapSrcFile = paste(dbPath,\"chipmapsrc_yeast.sqlite\",sep=\"\")   chipMapSrcFile =  NULL   makeBasePackage (  chipSrcFile , pkgName =  pkgName , destDir =  destDir , template =  template , vals =  vals ) #arabidopsis.db0   vals -   list ( ANNOBJPREFIX =  \"arabidopsis\" , ORGANISM =  \"Arabidopsis thaliana\" , SPECIES =  \"arabidopsis\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Arabidopsis_thaliana\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_arabidopsis.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_arabidopsis.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #malaria.db0   vals -   list ( ANNOBJPREFIX =  \"malaria\" , ORGANISM =  \"Plasmodium falciparum\" , SPECIES =  \"malaria\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Plasmodium_falciparum\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_malaria.sqlite\" , sep =  \"\" )   chipMapSrcFile =  NULL   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #zebrafish.db0   vals -   list ( ANNOBJPREFIX =  \"zebrafish\" , ORGANISM =  \"Danio rerio\" , SPECIES =  \"zebrafish\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Danio_rerio\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_zebrafish.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_zebrafish.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #canine.db0   vals -   list ( ANNOBJPREFIX =  \"canine\" , ORGANISM =  \"Canis familiaris\" , SPECIES =  \"canine\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Canis_familiaris\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_canine.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_canine.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #bovine.db0   vals -   list ( ANNOBJPREFIX =  \"bovine\" , ORGANISM =  \"Bos taurus\" , SPECIES =  \"bovine\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Bos_taurus\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_bovine.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_bovine.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #ecoliK12.db0   vals -   list ( ANNOBJPREFIX =  \"ecoliK12\" , ORGANISM =  \"Escherichia coli\" , SPECIES =  \"E coli K12 Strain\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Escherichia_coli\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_ecoliK12.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_ecoliK12.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #ecoliSakai.db0   vals -   list ( ANNOBJPREFIX =  \"ecoliSakai\" , ORGANISM =  \"Escherichia coli\" , SPECIES =  \"E coli Sakai Strain\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Escherichia_coli\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_ecoliSakai.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_ecoliSakai.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #worm.db0   vals -   list ( ANNOBJPREFIX =  \"worm\" , ORGANISM =  \"Caenorhabditis elegans\" , SPECIES =  \"worm\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Caenorhabditis_elegans\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_worm.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_worm.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #pig.db0   vals -   list ( ANNOBJPREFIX =  \"pig\" , ORGANISM =  \"Sus scrofa\" , SPECIES =  \"pig\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Sus_scrofa\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_pig.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_pig.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #chicken.db0   vals -   list ( ANNOBJPREFIX =  \"chicken\" , ORGANISM =  \"Gallus gallus\" , SPECIES =  \"chicken\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Gallus_gallus\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_chicken.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_chicken.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) ##   #yeastNCBI.db0 ##   vals ##                ORGANISM=\"Saccharomyces cerevisiae\", ##                SPECIES=\"yeast\", ##                AUTHOR=\"Marc Carlson, Nianhua Li, Herve Pages\", ##                PKGVERSION=version, ##                LIC=\"The Artistic License, Version 2.0\", ##                BIOCVIEWS=\"AnnotationData, Saccharomyces_cerevisiae\", ##                ANNDBIVERSION=\"1.1.28\", ##                MAINTAINER=\"Bioconductor Package Maintainer ##   pkgName= paste(vals[[\"ANNOBJPREFIX\"]],\".db0\",sep=\"\") ##   template=paste(system.file(package = \"AnnotationForge\"), \"/AnnDbPkg-templates/BASEPKG.DB\", sep=\"\") ##   chipSrcFile = paste(dbPath,\"chipsrc_yeastNCBI.sqlite\",sep=\"\") ##   chipMapSrcFile = paste(dbPath,\"chipmapsrc_yeastNCBI.sqlite\",sep=\"\") ##   makeBasePackage(chipSrcFile, pkgName=pkgName, destDir=destDir, template=template, vals=vals) #chimp.db0   vals -   list ( ANNOBJPREFIX =  \"chimp\" , ORGANISM =  \"Pan troglodytes\" , SPECIES =  \"chimp\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Pan_troglodytes\" , ANNDBIVERSION =  \"1.7.0\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_chimp.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_chimp.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #rhesus.db0   vals -   list ( ANNOBJPREFIX =  \"rhesus\" , ORGANISM =  \"Macaca Mulatta\" , SPECIES =  \"rhesus\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Macaca_Mulatta\" , ANNDBIVERSION =  \"1.7.0\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_rhesus.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_rhesus.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #anopheles.db0   vals -   list ( ANNOBJPREFIX =  \"anopheles\" , ORGANISM =  \"Anopheles gambiae\" , SPECIES =  \"anopheles\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Anopheles_gambiae\" , ANNDBIVERSION =  \"1.7.0\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_anopheles.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_anopheles.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #xenopus.db0   vals -   list ( ANNOBJPREFIX =  \"xenopus\" , ORGANISM =  \"Xenopus laevis\" , SPECIES =  \"xenopus\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Xenopus_laevis\" , ANNDBIVERSION =  \"1.7.0\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_xenopus.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_xenopus.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) } ",
    "filename": "sqlForge_wrapBaseDBPkgs.txt"
  },
  "new_function": {
    "name": "wrapBaseDBPackages",
    "representation": "wrapBaseDBPackages",
    "parameters": "function ( dbPath , destDir = \".\" , version )",
    "body": "{   anndbi_version -    installed.packages ( ) [  'AnnotationDbi' ,  'Version' ] #human.db0   vals -   list ( ANNOBJPREFIX =  \"human\" , ORGANISM =  \"Homo sapiens\" , SPECIES =  \"human\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Homo_sapiens\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_human.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_human.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #mouse.db0   vals -   list ( ANNOBJPREFIX =  \"mouse\" , ORGANISM =  \"Mus musculus\" , SPECIES =  \"mouse\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Mus_musculus\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_mouse.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_mouse.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #rat.db0   vals -   list ( ANNOBJPREFIX =  \"rat\" , ORGANISM =  \"Rattus norvegicus\" , SPECIES =  \"rat\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Rattus_norvegicus\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_rat.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_rat.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #fly.db0   vals -   list ( ANNOBJPREFIX =  \"fly\" , ORGANISM =  \"Drosophila melanogaster\" , SPECIES =  \"fly\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Drosophila_melanogaster\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_fly.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_fly.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #yeast.db0   vals -   list ( ANNOBJPREFIX =  \"yeast\" , ORGANISM =  \"Saccharomyces cerevisiae\" , SPECIES =  \"yeast\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Saccharomyces_cerevisiae\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_yeast.sqlite\" , sep =  \"\" ) #  chipMapSrcFile = paste(dbPath,\"chipmapsrc_yeast.sqlite\",sep=\"\")   chipMapSrcFile =  NULL   makeBasePackage (  chipSrcFile , pkgName =  pkgName , destDir =  destDir , template =  template , vals =  vals ) #arabidopsis.db0   vals -   list ( ANNOBJPREFIX =  \"arabidopsis\" , ORGANISM =  \"Arabidopsis thaliana\" , SPECIES =  \"arabidopsis\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Arabidopsis_thaliana\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_arabidopsis.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_arabidopsis.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #malaria.db0   vals -   list ( ANNOBJPREFIX =  \"malaria\" , ORGANISM =  \"Plasmodium falciparum\" , SPECIES =  \"malaria\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Plasmodium_falciparum\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_malaria.sqlite\" , sep =  \"\" )   chipMapSrcFile =  NULL   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #zebrafish.db0   vals -   list ( ANNOBJPREFIX =  \"zebrafish\" , ORGANISM =  \"Danio rerio\" , SPECIES =  \"zebrafish\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Danio_rerio\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_zebrafish.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_zebrafish.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #canine.db0   vals -   list ( ANNOBJPREFIX =  \"canine\" , ORGANISM =  \"Canis familiaris\" , SPECIES =  \"canine\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Canis_familiaris\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_canine.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_canine.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #bovine.db0   vals -   list ( ANNOBJPREFIX =  \"bovine\" , ORGANISM =  \"Bos taurus\" , SPECIES =  \"bovine\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Bos_taurus\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_bovine.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_bovine.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #ecoliK12.db0   vals -   list ( ANNOBJPREFIX =  \"ecoliK12\" , ORGANISM =  \"Escherichia coli\" , SPECIES =  \"E coli K12 Strain\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Escherichia_coli\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_ecoliK12.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_ecoliK12.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #ecoliSakai.db0   vals -   list ( ANNOBJPREFIX =  \"ecoliSakai\" , ORGANISM =  \"Escherichia coli\" , SPECIES =  \"E coli Sakai Strain\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Escherichia_coli\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_ecoliSakai.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_ecoliSakai.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #worm.db0   vals -   list ( ANNOBJPREFIX =  \"worm\" , ORGANISM =  \"Caenorhabditis elegans\" , SPECIES =  \"worm\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Caenorhabditis_elegans\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_worm.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_worm.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #pig.db0   vals -   list ( ANNOBJPREFIX =  \"pig\" , ORGANISM =  \"Sus scrofa\" , SPECIES =  \"pig\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Sus_scrofa\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_pig.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_pig.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #chicken.db0   vals -   list ( ANNOBJPREFIX =  \"chicken\" , ORGANISM =  \"Gallus gallus\" , SPECIES =  \"chicken\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Gallus_gallus\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_chicken.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_chicken.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) ##   #yeastNCBI.db0 ##   vals ##                ORGANISM=\"Saccharomyces cerevisiae\", ##                SPECIES=\"yeast\", ##                AUTHOR=\"Marc Carlson, Nianhua Li, Herve Pages\", ##                PKGVERSION=version, ##                LIC=\"Artistic-2.0\", ##                BIOCVIEWS=\"AnnotationData, Saccharomyces_cerevisiae\", ##                ANNDBIVERSION=anndbi_version, ##                MAINTAINER=\"Bioconductor Package Maintainer ##   pkgName= paste(vals[[\"ANNOBJPREFIX\"]],\".db0\",sep=\"\") ##   template=paste(system.file(package = \"AnnotationForge\"), \"/AnnDbPkg-templates/BASEPKG.DB\", sep=\"\") ##   chipSrcFile = paste(dbPath,\"chipsrc_yeastNCBI.sqlite\",sep=\"\") ##   chipMapSrcFile = paste(dbPath,\"chipmapsrc_yeastNCBI.sqlite\",sep=\"\") ##   makeBasePackage(chipSrcFile, pkgName=pkgName, destDir=destDir, template=template, vals=vals) #chimp.db0   vals -   list ( ANNOBJPREFIX =  \"chimp\" , ORGANISM =  \"Pan troglodytes\" , SPECIES =  \"chimp\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Pan_troglodytes\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_chimp.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_chimp.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #rhesus.db0   vals -   list ( ANNOBJPREFIX =  \"rhesus\" , ORGANISM =  \"Macaca Mulatta\" , SPECIES =  \"rhesus\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Macaca_Mulatta\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_rhesus.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_rhesus.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #anopheles.db0   vals -   list ( ANNOBJPREFIX =  \"anopheles\" , ORGANISM =  \"Anopheles gambiae\" , SPECIES =  \"anopheles\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Anopheles_gambiae\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_anopheles.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_anopheles.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #xenopus.db0   vals -   list ( ANNOBJPREFIX =  \"xenopus\" , ORGANISM =  \"Xenopus laevis\" , SPECIES =  \"xenopus\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Xenopus_laevis\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_xenopus.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_xenopus.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) } ",
    "filename": "sqlForge_wrapBaseDBPkgs.txt"
  }
}



##########
All Parameter Breaking Changes
##########

0.
{
  "old_function": {
    "name": "wrapBaseDBPackages",
    "representation": "wrapBaseDBPackages",
    "parameters": "function ( dbPath = \"/mnt/cpb_anno/mcarlson/proj/mcarlson/sqliteGen/annosrc/db/\" , destDir = \".\" , version )",
    "body": "{ #human.db0   vals -   list ( ANNOBJPREFIX =  \"human\" , ORGANISM =  \"Homo sapiens\" , SPECIES =  \"human\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Homo_sapiens\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_human.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_human.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #mouse.db0   vals -   list ( ANNOBJPREFIX =  \"mouse\" , ORGANISM =  \"Mus musculus\" , SPECIES =  \"mouse\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Mus_musculus\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_mouse.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_mouse.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #rat.db0   vals -   list ( ANNOBJPREFIX =  \"rat\" , ORGANISM =  \"Rattus norvegicus\" , SPECIES =  \"rat\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Rattus_norvegicus\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_rat.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_rat.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #fly.db0   vals -   list ( ANNOBJPREFIX =  \"fly\" , ORGANISM =  \"Drosophila melanogaster\" , SPECIES =  \"fly\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Drosophila_melanogaster\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_fly.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_fly.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #yeast.db0   vals -   list ( ANNOBJPREFIX =  \"yeast\" , ORGANISM =  \"Saccharomyces cerevisiae\" , SPECIES =  \"yeast\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Saccharomyces_cerevisiae\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_yeast.sqlite\" , sep =  \"\" ) #  chipMapSrcFile = paste(dbPath,\"chipmapsrc_yeast.sqlite\",sep=\"\")   chipMapSrcFile =  NULL   makeBasePackage (  chipSrcFile , pkgName =  pkgName , destDir =  destDir , template =  template , vals =  vals ) #arabidopsis.db0   vals -   list ( ANNOBJPREFIX =  \"arabidopsis\" , ORGANISM =  \"Arabidopsis thaliana\" , SPECIES =  \"arabidopsis\" , AUTHOR =  \"Marc Carlson, Nianhua Li, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Arabidopsis_thaliana\" , ANNDBIVERSION =  \"1.1.15\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_arabidopsis.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_arabidopsis.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #malaria.db0   vals -   list ( ANNOBJPREFIX =  \"malaria\" , ORGANISM =  \"Plasmodium falciparum\" , SPECIES =  \"malaria\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Plasmodium_falciparum\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_malaria.sqlite\" , sep =  \"\" )   chipMapSrcFile =  NULL   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #zebrafish.db0   vals -   list ( ANNOBJPREFIX =  \"zebrafish\" , ORGANISM =  \"Danio rerio\" , SPECIES =  \"zebrafish\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Danio_rerio\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_zebrafish.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_zebrafish.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #canine.db0   vals -   list ( ANNOBJPREFIX =  \"canine\" , ORGANISM =  \"Canis familiaris\" , SPECIES =  \"canine\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Canis_familiaris\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_canine.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_canine.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #bovine.db0   vals -   list ( ANNOBJPREFIX =  \"bovine\" , ORGANISM =  \"Bos taurus\" , SPECIES =  \"bovine\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Bos_taurus\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_bovine.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_bovine.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #ecoliK12.db0   vals -   list ( ANNOBJPREFIX =  \"ecoliK12\" , ORGANISM =  \"Escherichia coli\" , SPECIES =  \"E coli K12 Strain\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Escherichia_coli\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_ecoliK12.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_ecoliK12.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #ecoliSakai.db0   vals -   list ( ANNOBJPREFIX =  \"ecoliSakai\" , ORGANISM =  \"Escherichia coli\" , SPECIES =  \"E coli Sakai Strain\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Escherichia_coli\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_ecoliSakai.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_ecoliSakai.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #worm.db0   vals -   list ( ANNOBJPREFIX =  \"worm\" , ORGANISM =  \"Caenorhabditis elegans\" , SPECIES =  \"worm\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Caenorhabditis_elegans\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_worm.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_worm.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #pig.db0   vals -   list ( ANNOBJPREFIX =  \"pig\" , ORGANISM =  \"Sus scrofa\" , SPECIES =  \"pig\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Sus_scrofa\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_pig.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_pig.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #chicken.db0   vals -   list ( ANNOBJPREFIX =  \"chicken\" , ORGANISM =  \"Gallus gallus\" , SPECIES =  \"chicken\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Gallus_gallus\" , ANNDBIVERSION =  \"1.1.28\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_chicken.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_chicken.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) ##   #yeastNCBI.db0 ##   vals ##                ORGANISM=\"Saccharomyces cerevisiae\", ##                SPECIES=\"yeast\", ##                AUTHOR=\"Marc Carlson, Nianhua Li, Herve Pages\", ##                PKGVERSION=version, ##                LIC=\"The Artistic License, Version 2.0\", ##                BIOCVIEWS=\"AnnotationData, Saccharomyces_cerevisiae\", ##                ANNDBIVERSION=\"1.1.28\", ##                MAINTAINER=\"Bioconductor Package Maintainer ##   pkgName= paste(vals[[\"ANNOBJPREFIX\"]],\".db0\",sep=\"\") ##   template=paste(system.file(package = \"AnnotationForge\"), \"/AnnDbPkg-templates/BASEPKG.DB\", sep=\"\") ##   chipSrcFile = paste(dbPath,\"chipsrc_yeastNCBI.sqlite\",sep=\"\") ##   chipMapSrcFile = paste(dbPath,\"chipmapsrc_yeastNCBI.sqlite\",sep=\"\") ##   makeBasePackage(chipSrcFile, pkgName=pkgName, destDir=destDir, template=template, vals=vals) #chimp.db0   vals -   list ( ANNOBJPREFIX =  \"chimp\" , ORGANISM =  \"Pan troglodytes\" , SPECIES =  \"chimp\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Pan_troglodytes\" , ANNDBIVERSION =  \"1.7.0\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_chimp.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_chimp.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #rhesus.db0   vals -   list ( ANNOBJPREFIX =  \"rhesus\" , ORGANISM =  \"Macaca Mulatta\" , SPECIES =  \"rhesus\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Macaca_Mulatta\" , ANNDBIVERSION =  \"1.7.0\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_rhesus.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_rhesus.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #anopheles.db0   vals -   list ( ANNOBJPREFIX =  \"anopheles\" , ORGANISM =  \"Anopheles gambiae\" , SPECIES =  \"anopheles\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Anopheles_gambiae\" , ANNDBIVERSION =  \"1.7.0\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_anopheles.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_anopheles.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #xenopus.db0   vals -   list ( ANNOBJPREFIX =  \"xenopus\" , ORGANISM =  \"Xenopus laevis\" , SPECIES =  \"xenopus\" , AUTHOR =  \"Marc Carlson, Herve Pages\" , PKGVERSION =  version , LIC =  \"The Artistic License, Version 2.0\" , BIOCVIEWS =  \"AnnotationData, Xenopus_laevis\" , ANNDBIVERSION =  \"1.7.0\" , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_xenopus.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_xenopus.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) } ",
    "filename": "sqlForge_wrapBaseDBPkgs.txt"
  },
  "new_function": {
    "name": "wrapBaseDBPackages",
    "representation": "wrapBaseDBPackages",
    "parameters": "function ( dbPath , destDir = \".\" , version )",
    "body": "{   anndbi_version -    installed.packages ( ) [  'AnnotationDbi' ,  'Version' ] #human.db0   vals -   list ( ANNOBJPREFIX =  \"human\" , ORGANISM =  \"Homo sapiens\" , SPECIES =  \"human\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Homo_sapiens\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_human.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_human.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #mouse.db0   vals -   list ( ANNOBJPREFIX =  \"mouse\" , ORGANISM =  \"Mus musculus\" , SPECIES =  \"mouse\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Mus_musculus\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_mouse.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_mouse.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #rat.db0   vals -   list ( ANNOBJPREFIX =  \"rat\" , ORGANISM =  \"Rattus norvegicus\" , SPECIES =  \"rat\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Rattus_norvegicus\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_rat.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_rat.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #fly.db0   vals -   list ( ANNOBJPREFIX =  \"fly\" , ORGANISM =  \"Drosophila melanogaster\" , SPECIES =  \"fly\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Drosophila_melanogaster\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_fly.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_fly.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #yeast.db0   vals -   list ( ANNOBJPREFIX =  \"yeast\" , ORGANISM =  \"Saccharomyces cerevisiae\" , SPECIES =  \"yeast\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Saccharomyces_cerevisiae\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_yeast.sqlite\" , sep =  \"\" ) #  chipMapSrcFile = paste(dbPath,\"chipmapsrc_yeast.sqlite\",sep=\"\")   chipMapSrcFile =  NULL   makeBasePackage (  chipSrcFile , pkgName =  pkgName , destDir =  destDir , template =  template , vals =  vals ) #arabidopsis.db0   vals -   list ( ANNOBJPREFIX =  \"arabidopsis\" , ORGANISM =  \"Arabidopsis thaliana\" , SPECIES =  \"arabidopsis\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Arabidopsis_thaliana\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_arabidopsis.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_arabidopsis.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #malaria.db0   vals -   list ( ANNOBJPREFIX =  \"malaria\" , ORGANISM =  \"Plasmodium falciparum\" , SPECIES =  \"malaria\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Plasmodium_falciparum\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_malaria.sqlite\" , sep =  \"\" )   chipMapSrcFile =  NULL   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #zebrafish.db0   vals -   list ( ANNOBJPREFIX =  \"zebrafish\" , ORGANISM =  \"Danio rerio\" , SPECIES =  \"zebrafish\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Danio_rerio\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_zebrafish.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_zebrafish.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #canine.db0   vals -   list ( ANNOBJPREFIX =  \"canine\" , ORGANISM =  \"Canis familiaris\" , SPECIES =  \"canine\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Canis_familiaris\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_canine.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_canine.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #bovine.db0   vals -   list ( ANNOBJPREFIX =  \"bovine\" , ORGANISM =  \"Bos taurus\" , SPECIES =  \"bovine\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Bos_taurus\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_bovine.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_bovine.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #ecoliK12.db0   vals -   list ( ANNOBJPREFIX =  \"ecoliK12\" , ORGANISM =  \"Escherichia coli\" , SPECIES =  \"E coli K12 Strain\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Escherichia_coli\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_ecoliK12.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_ecoliK12.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #ecoliSakai.db0   vals -   list ( ANNOBJPREFIX =  \"ecoliSakai\" , ORGANISM =  \"Escherichia coli\" , SPECIES =  \"E coli Sakai Strain\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Escherichia_coli\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_ecoliSakai.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_ecoliSakai.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #worm.db0   vals -   list ( ANNOBJPREFIX =  \"worm\" , ORGANISM =  \"Caenorhabditis elegans\" , SPECIES =  \"worm\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Caenorhabditis_elegans\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_worm.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_worm.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #pig.db0   vals -   list ( ANNOBJPREFIX =  \"pig\" , ORGANISM =  \"Sus scrofa\" , SPECIES =  \"pig\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Sus_scrofa\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_pig.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_pig.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #chicken.db0   vals -   list ( ANNOBJPREFIX =  \"chicken\" , ORGANISM =  \"Gallus gallus\" , SPECIES =  \"chicken\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Gallus_gallus\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_chicken.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_chicken.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) ##   #yeastNCBI.db0 ##   vals ##                ORGANISM=\"Saccharomyces cerevisiae\", ##                SPECIES=\"yeast\", ##                AUTHOR=\"Marc Carlson, Nianhua Li, Herve Pages\", ##                PKGVERSION=version, ##                LIC=\"Artistic-2.0\", ##                BIOCVIEWS=\"AnnotationData, Saccharomyces_cerevisiae\", ##                ANNDBIVERSION=anndbi_version, ##                MAINTAINER=\"Bioconductor Package Maintainer ##   pkgName= paste(vals[[\"ANNOBJPREFIX\"]],\".db0\",sep=\"\") ##   template=paste(system.file(package = \"AnnotationForge\"), \"/AnnDbPkg-templates/BASEPKG.DB\", sep=\"\") ##   chipSrcFile = paste(dbPath,\"chipsrc_yeastNCBI.sqlite\",sep=\"\") ##   chipMapSrcFile = paste(dbPath,\"chipmapsrc_yeastNCBI.sqlite\",sep=\"\") ##   makeBasePackage(chipSrcFile, pkgName=pkgName, destDir=destDir, template=template, vals=vals) #chimp.db0   vals -   list ( ANNOBJPREFIX =  \"chimp\" , ORGANISM =  \"Pan troglodytes\" , SPECIES =  \"chimp\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Pan_troglodytes\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_chimp.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_chimp.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #rhesus.db0   vals -   list ( ANNOBJPREFIX =  \"rhesus\" , ORGANISM =  \"Macaca Mulatta\" , SPECIES =  \"rhesus\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Macaca_Mulatta\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_rhesus.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_rhesus.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #anopheles.db0   vals -   list ( ANNOBJPREFIX =  \"anopheles\" , ORGANISM =  \"Anopheles gambiae\" , SPECIES =  \"anopheles\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Anopheles_gambiae\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_anopheles.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_anopheles.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) #xenopus.db0   vals -   list ( ANNOBJPREFIX =  \"xenopus\" , ORGANISM =  \"Xenopus laevis\" , SPECIES =  \"xenopus\" , AUTHOR =  \"Bioconductor Core Team\" , PKGVERSION =  version , LIC =  \"Artistic-2.0\" , BIOCVIEWS =  \"AnnotationData, Xenopus_laevis\" , ANNDBIVERSION =  anndbi_version , MAINTAINER =  \"Bioconductor Package Maintainer )   pkgName =   paste (   vals [[  \"ANNOBJPREFIX\" ] ] ,  \".db0\" , sep =  \"\" )   template =   paste (   system.file ( package =  \"AnnotationForge\" ) ,  \"/AnnDbPkg-templates/BASEPKG.DB\" , sep =  \"\" )   chipSrcFile =   paste (  dbPath ,  \"chipsrc_xenopus.sqlite\" , sep =  \"\" )   chipMapSrcFile =   paste (  dbPath ,  \"chipmapsrc_xenopus.sqlite\" , sep =  \"\" )   makeBasePackage (  chipSrcFile ,  chipMapSrcFile ,  pkgName ,  destDir ,  template ,  vals ) } ",
    "filename": "sqlForge_wrapBaseDBPkgs.txt"
  }
}


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_3 annotationforge_release_3_4

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_3 annotationforge_release_3_4",
    "desc_release_old": "1.14.2",
    "desc_release_new": "1.16.1",
    "old_release_number": 6,
    "new_release_number": 7,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_4 annotationforge_release_3_5

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_4 annotationforge_release_3_5",
    "desc_release_old": "1.16.1",
    "desc_release_new": "1.18.2",
    "old_release_number": 7,
    "new_release_number": 8,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_5 annotationforge_release_3_6

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_5 annotationforge_release_3_6",
    "desc_release_old": "1.18.2",
    "desc_release_new": "1.20.0",
    "old_release_number": 8,
    "new_release_number": 9,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_6 annotationforge_release_3_7

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_6 annotationforge_release_3_7",
    "desc_release_old": "1.20.0",
    "desc_release_new": "1.22.2",
    "old_release_number": 9,
    "new_release_number": 10,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_7 annotationforge_release_3_8

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_7 annotationforge_release_3_8",
    "desc_release_old": "1.22.2",
    "desc_release_new": "1.24.0",
    "old_release_number": 10,
    "new_release_number": 11,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_8 annotationforge_release_3_9

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_8 annotationforge_release_3_9",
    "desc_release_old": "1.24.0",
    "desc_release_new": "1.26.0",
    "old_release_number": 11,
    "new_release_number": 12,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_9 annotationforge_release_3_11

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_9 annotationforge_release_3_11",
    "desc_release_old": "1.26.0",
    "desc_release_new": "1.30.1",
    "old_release_number": 12,
    "new_release_number": 13,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_11 annotationforge_release_3_12

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_11 annotationforge_release_3_12",
    "desc_release_old": "1.30.1",
    "desc_release_new": "1.32.0",
    "old_release_number": 13,
    "new_release_number": 14,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_12 annotationforge_release_3_13

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_12 annotationforge_release_3_13",
    "desc_release_old": "1.32.0",
    "desc_release_new": "1.34.1",
    "old_release_number": 14,
    "new_release_number": 15,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_13 annotationforge_release_3_14

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_13 annotationforge_release_3_14",
    "desc_release_old": "1.34.1",
    "desc_release_new": "1.36.0",
    "old_release_number": 15,
    "new_release_number": 16,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  annotationforge_release_3_14 annotationforge_master

{
    "package": "AnnotationForge",
    "release_versions": "annotationforge_release_3_14 annotationforge_master",
    "desc_release_old": "1.36.0",
    "desc_release_new": "1.37.3",
    "old_release_number": 16,
    "new_release_number": 17,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########

