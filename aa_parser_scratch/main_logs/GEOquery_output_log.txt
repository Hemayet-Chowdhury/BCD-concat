
###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_1_8 geoquery_release_1_9

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_1_8 geoquery_release_1_9",
    "desc_release_old": "1.7.3",
    "desc_release_new": "1.8.0",
    "old_release_number": 0,
    "new_release_number": 1,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_1_9 geoquery_release_2_1

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_1_9 geoquery_release_2_1",
    "desc_release_old": "1.8.0",
    "desc_release_new": "2.2.1",
    "old_release_number": 1,
    "new_release_number": 2,
    "function_removals": 0,
    "function_additions": 1,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########

gunzip


##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_1 geoquery_release_2_2

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_1 geoquery_release_2_2",
    "desc_release_old": "2.2.1",
    "desc_release_new": "2.4.5",
    "old_release_number": 2,
    "new_release_number": 3,
    "function_removals": 0,
    "function_additions": 1,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 4,
    "total_count": 4
}

##########
Functions Removed
##########



##########
Functions Added
##########

getGEOSuppFiles


##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########

0.
{
  "old_function": {
    "name": "getGEOfile",
    "representation": "getGEOfile",
    "parameters": "function ( GEO , destdir = tempdir ( ) , amount = c ( 'full' , 'brief' , 'quick' , 'data' ) )",
    "body": "{   amount -   match.arg (  amount )   geotype -   toupper (   substr (  GEO ,  1 ,  3 ) )   mode -  'wb'  if (   geotype ==  'GDS' )  {   gdsurl -  'ftp://ftp.ncbi.nih.gov/pub/geo/DATA/SOFT/GDS/'   myurl -   paste (  gdsurl ,  GEO ,  '.soft.gz' , sep =  \"\" )   destfile -   file.path (  destdir ,   paste (  GEO ,  '.soft.gz' , sep =  \"\" ) ) }  if (    geotype ==  'GSE' undefined   amount ==  'full' )  {   gseurl -  'ftp://ftp.ncbi.nih.gov/pub/geo/DATA/SOFT/by_series/'   myurl -   paste (  gseurl ,  GEO ,  '/' ,  GEO ,  '_family.soft.gz' , sep =  \"\" )   destfile -   file.path (  destdir ,   paste (  GEO ,  '.soft.gz' , sep =  \"\" ) ) }  if (     geotype ==  'GSE' undefined   amount !=  'full' undefined   amount !=  'table' )  {   gseurl -  \"http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi\"   myurl -   paste (  gseurl ,  '?targ=self ,  GEO ,  ' ,  amount , sep =  '' )   destfile -   file.path (  destdir ,   paste (  GEO ,  '.soft' , sep =  \"\" ) )   mode -  'w' }  if (   geotype ==  'GPL' )  {   gseurl -  \"http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi\"   myurl -   paste (  gseurl ,  '?targ=self ,  GEO ,  ' ,  amount , sep =  '' )   destfile -   file.path (  destdir ,   paste (  GEO ,  '.soft' , sep =  \"\" ) )   mode -  'w' }  if (   geotype ==  'GSM' )  {   gseurl -  \"http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi\"   myurl -   paste (  gseurl ,  '?targ=self ,  GEO ,  ' ,  amount , sep =  '' )   destfile -   file.path (  destdir ,   paste (  GEO ,  '.soft' , sep =  \"\" ) )   mode -  'w' }   download.file (  myurl ,  destfile , mode =  mode )   writeLines (  'File stored at: ' )   writeLines (  destfile )   invisible (  destfile ) } ",
    "filename": "getGEOfile.txt"
  },
  "new_function": {
    "name": "getGEOfile",
    "representation": "getGEOfile",
    "parameters": "function ( GEO , destdir = tempdir ( ) , AnnotGPL = FALSE , amount = c ( 'full' , 'brief' , 'quick' , 'data' ) )",
    "body": "{   amount -   match.arg (  amount )   geotype -   toupper (   substr (  GEO ,  1 ,  3 ) )   mode -  'wb'  if (   geotype ==  'GDS' )  {   gdsurl -  'ftp://ftp.ncbi.nih.gov/pub/geo/DATA/SOFT/GDS/'   myurl -   paste (  gdsurl ,  GEO ,  '.soft.gz' , sep =  \"\" )   destfile -   file.path (  destdir ,   paste (  GEO ,  '.soft.gz' , sep =  \"\" ) ) }  if (    geotype ==  'GSE' undefined   amount ==  'full' )  {   gseurl -  'ftp://ftp.ncbi.nih.gov/pub/geo/DATA/SOFT/by_series/'   myurl -   paste (  gseurl ,  GEO ,  '/' ,  GEO ,  '_family.soft.gz' , sep =  \"\" )   destfile -   file.path (  destdir ,   paste (  GEO ,  '.soft.gz' , sep =  \"\" ) ) }  if (     geotype ==  'GSE' undefined   amount !=  'full' undefined   amount !=  'table' )  {   gseurl -  \"http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi\"   myurl -   paste (  gseurl ,  '?targ=self ,  GEO ,  ' ,  amount , sep =  '' )   destfile -   file.path (  destdir ,   paste (  GEO ,  '.soft' , sep =  \"\" ) )   mode -  'w' }  if (   geotype ==  'GPL' )  {  if (  AnnotGPL )  {   gdsurl -  'ftp://ftp.ncbi.nih.gov/pub/geo/DATA/annotation/platforms/'   myurl -   paste (  gdsurl ,  GEO ,  '.annot.gz' , sep =  \"\" )   destfile -   file.path (  destdir ,   paste (  GEO ,  '.annot.gz' , sep =  \"\" ) ) } else  {   gseurl -  \"http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi\"   myurl -   paste (  gseurl ,  '?targ=self ,  GEO ,  ' ,  amount , sep =  '' )   destfile -   file.path (  destdir ,   paste (  GEO ,  '.soft' , sep =  \"\" ) )   mode -  'w' } }  if (   geotype ==  'GSM' )  {   gseurl -  \"http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi\"   myurl -   paste (  gseurl ,  '?targ=self ,  GEO ,  ' ,  amount , sep =  '' )   destfile -   file.path (  destdir ,   paste (  GEO ,  '.soft' , sep =  \"\" ) )   mode -  'w' }   download.file (  myurl ,  destfile , mode =  mode )  if (    length (   grep (  '\\\\.gz' ,  destfile , perl =  TRUE ) ) undefined  0 )  {   gunzip (  destfile , overwrite =  TRUE , remove =  TRUE )   destfile -   sub (  '\\\\.gz$' ,  '' ,  destfile ) }   writeLines (  'File stored at: ' )   writeLines (  destfile )   invisible (  destfile ) } ",
    "filename": "getGEOfile.txt"
  }
}

1.
{
  "old_function": {
    "name": "parseGSM",
    "representation": "parseGSM",
    "parameters": "function ( txt )",
    "body": "{   geoDataTable -   parseGeoDataTable (  txt )   meta -   parseGeoMeta (  txt )   gsm -   new (  'GSM' , header =  meta , dataTable =  geoDataTable )   return (  gsm ) } ",
    "filename": "parseGEO.txt"
  },
  "new_function": {
    "name": "parseGSM",
    "representation": "parseGSM",
    "parameters": "function ( con )",
    "body": "{   txt -   vector (  'character' )   i -  0  while (   i -   i +  1 )  {    txt [  i ] -   readLines (  con ,  1 )  if (    length (   grep (  '!\\\\w+_table_begin' ,   txt [  i ] , perl =  TRUE ) ) undefined  0 )  break }   cols -   parseGeoColumns (  txt )   meta -   parseGeoMeta (  txt )   dat3 -   fastTabRead (  con )   geoDataTable -   new (  'GEODataTable' , columns =  cols , table =   dat3 [   1 :  (    nrow (  dat3 ) -  1 ) , ] )   gsm -   new (  'GSM' , header =  meta , dataTable =  geoDataTable ) } ",
    "filename": "parseGEO.txt"
  }
}

2.
{
  "old_function": {
    "name": "parseGPL",
    "representation": "parseGPL",
    "parameters": "function ( txt )",
    "body": "{   geoDataTable -   parseGeoDataTable (  txt )   meta -   parseGeoMeta (  txt )   gsm -   new (  'GPL' , header =  meta , dataTable =  geoDataTable )   return (  gsm ) } ",
    "filename": "parseGEO.txt"
  },
  "new_function": {
    "name": "parseGPL",
    "representation": "parseGPL",
    "parameters": "function ( con )",
    "body": "{   txt -   vector (  'character' )   i -  0  while (   i -   i +  1 )  {    txt [  i ] -   readLines (  con ,  1 )  if (    length (   grep (  '!\\\\w+_table_begin' ,   txt [  i ] , perl =  TRUE ) ) undefined  0 )  break }   cols -   parseGeoColumns (  txt )   meta -   parseGeoMeta (  txt )   dat3 -   fastTabRead (  con )   geoDataTable -   new (  'GEODataTable' , columns =  cols , table =   dat3 [   1 :  (    nrow (  dat3 ) -  1 ) , ] )   gpl -   new (  'GPL' , header =  meta , dataTable =  geoDataTable ) } ",
    "filename": "parseGEO.txt"
  }
}

3.
{
  "old_function": {
    "name": "parseGDS",
    "representation": "parseGDS",
    "parameters": "function ( txt )",
    "body": "{   writeLines (  \"parsing geodata\" )   tab -   parseGeoData (  txt )   writeLines (  \"parsing subsets\" )   cols -   parseGDSSubsets (  txt )   writeLines (  \"ready to return\" )   return (   new (  'GDS' , header =   parseGeoMeta (  txt ) , dataTable =   new (  'GEODataTable' , table =  tab , columns =  cols ) ) ) } ",
    "filename": "parseGEO.txt"
  },
  "new_function": {
    "name": "parseGDS",
    "representation": "parseGDS",
    "parameters": "function ( con )",
    "body": "{   txt -   vector (  'character' )   i -  0  while (   i -   i +  1 )  {    txt [  i ] -   readLines (  con ,  1 )  if (    length (   grep (  '!\\\\w+_table_begin' ,   txt [  i ] , perl =  TRUE ) ) undefined  0 )  break }   cols -   parseGDSSubsets (  txt )   meta -   parseGeoMeta (  txt )   dat3 -   fastTabRead (  con )   geoDataTable -   new (  'GEODataTable' , columns =  cols , table =   dat3 [   1 :  (    nrow (  dat3 ) -  1 ) , ] )   gds -   new (  'GDS' , header =  meta , dataTable =  geoDataTable ) } ",
    "filename": "parseGEO.txt"
  }
}


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_2 geoquery_release_2_3

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_2 geoquery_release_2_3",
    "desc_release_old": "2.4.5",
    "desc_release_new": "2.6.0",
    "old_release_number": 3,
    "new_release_number": 4,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_3 geoquery_release_2_4

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_3 geoquery_release_2_4",
    "desc_release_old": "2.6.0",
    "desc_release_new": "2.8.0",
    "old_release_number": 4,
    "new_release_number": 5,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_4 geoquery_release_2_5

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_4 geoquery_release_2_5",
    "desc_release_old": "2.8.0",
    "desc_release_new": "2.13.3",
    "old_release_number": 5,
    "new_release_number": 6,
    "function_removals": 0,
    "function_additions": 1,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 5,
    "total_count": 5
}

##########
Functions Removed
##########



##########
Functions Added
##########

getGSEDataTables


##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########

0.
{
  "old_function": {
    "name": "parseGEO",
    "representation": "parseGEO",
    "parameters": "function ( con , GSElimits )",
    "body": "{   first.entity -   findFirstEntity (  con )   ret -   switch (   as.character (   first.entity [  1 ] ) , sample =  {   parseGSM (  con ) } , series =   parseGSE (  con ,  GSElimits ) , dataset =  {   parseGDS (  con ) } , platform =  {   parseGPL (  con ) } , series_matrix =  {    parseGSEMatrix (  con ) $ eset } )   return (  ret ) } ",
    "filename": "parseGEO.txt"
  },
  "new_function": {
    "name": "parseGEO",
    "representation": "parseGEO",
    "parameters": "function ( fname , GSElimits )",
    "body": "{   con -   fileOpen (  fname )   first.entity -   findFirstEntity (  con )   close (  con )   ret -   switch (   as.character (   first.entity [  1 ] ) , sample =  {   parseGSM (  fname ) } , series =   parseGSE (  fname ,  GSElimits ) , dataset =  {   parseGDS (  fname ) } , platform =  {   parseGPL (  fname ) } , \"0\" =  {    parseGSEMatrix (  fname ) $ eset } , )   return (  ret ) } ",
    "filename": "parseGEO.txt"
  }
}

1.
{
  "old_function": {
    "name": "parseGSM",
    "representation": "parseGSM",
    "parameters": "function ( con )",
    "body": "{   txt -   vector (  'character' )   i -  0  while (   i -   i +  1 )  {    txt [  i ] -   readLines (  con ,  1 )  if (    length (   grep (  '!\\\\w+_table_begin' ,   txt [  i ] , perl =  TRUE ) ) undefined  0 )  break }   cols -   parseGeoColumns (  txt )   meta -   parseGeoMeta (  txt )   dat3 -   fastTabRead (  con )   geoDataTable -   new (  'GEODataTable' , columns =  cols , table =   dat3 [   1 :  (    nrow (  dat3 ) -  1 ) , ] )   gsm -   new (  'GSM' , header =  meta , dataTable =  geoDataTable ) } ",
    "filename": "parseGEO.txt"
  },
  "new_function": {
    "name": "parseGSM",
    "representation": "parseGSM",
    "parameters": "function ( fname )",
    "body": "{   con -   fileOpen (  fname )   ret -   .parseGSMWithLimits (  con )   close (  con )   return (  ret ) } ",
    "filename": "parseGEO.txt"
  }
}

2.
{
  "old_function": {
    "name": "parseGSE",
    "representation": "parseGSE",
    "parameters": "function ( con , GSElimits )",
    "body": "{   gsmlist -   list ( )   gpllist -   list ( )   GSMcount -  0   writeLines (  'Parsing....' ) ## This gets the header information for the GSE   lines -  1   a -   vector ( )   finished -  FALSE   nextEntity -  \"\"  while (  !  finished )  {   line -   readLines (  con ,  1 )  if (    length (  line ) ==  0 )   finished -  TRUE    a [  lines ] -  line   lines -   lines +  1   b -   grep (  '^\\\\^(SAMPLE|PLATFORM)' ,  line , value =  TRUE , perl =  TRUE )  if (    length (  b ) undefined  0 )  {   nextEntity -  b   writeLines (  b )   finished -  TRUE   lines -  1   header =   parseGeoMeta (  a ) } }   finished -  FALSE  while (  !  finished )  {   line -   readLines (  con ,  1 )  if (    length (  line ) ==  0 )  {   finished -  TRUE } else  {    a [  lines ] -  line   lines -   lines +  1   b -   grep (  '^\\\\^(SAMPLE|PLATFORM)' ,  line , value =  TRUE , perl =  TRUE ) }  if (     length (  b ) undefined  0 |  finished )  {   lines -  1 #new SAMPLE  if (    length (   grep (  'SAMPLE' ,  nextEntity ) ) undefined  0 )  {   accession -     strsplit (  nextEntity ,  ' = ' ) [[  1 ] ] [  2 ]   GSMcount -   GSMcount +  1 # Look to see if limits should be used, otherwise, proceed  if (   is.null (  GSElimits ) )  {   offset -   ifelse (  finished ,  1 ,  2 )   tmpcon -   textConnection (   a [   1 :  (    length (  a ) -  offset ) ] )    gsmlist [[  accession ] ] -   parseGSM (  tmpcon )   close (  tmpcon )   writeLines (  b ) } else  {  if (   (   GSMcount =   GSElimits [  1 ] ) undefined  (   GSMcount =   GSElimits [  2 ] ) )  {   offset -   ifelse (  finished ,  1 ,  2 )   tmpcon -   textConnection (   a [   1 :  (    length (  a ) -  offset ) ] )    gsmlist [[  accession ] ] -   parseGSM (  tmpcon )   close (  tmpcon )   writeLines (  b ) } else  {   cat (  'Skipping sample' ,  GSMcount ,  ': Accession' ,  accession ,  'at user request\\n' ) } } }  if (    length (   grep (  'PLATFORM' ,  nextEntity ) ) undefined  0 )  {   accession -     strsplit (  nextEntity ,  ' = ' ) [[  1 ] ] [  2 ]   offset -   ifelse (  finished ,  1 ,  2 )   tmpcon -   textConnection (   a [   1 :  (    length (  a ) -  offset ) ] )    gpllist [[  accession ] ] -   parseGPL (  tmpcon )   close (  tmpcon ) }  if (  !   is.null (  GSElimits ) )  {  if (    GSMcount +  1 undefined   GSElimits [  2 ] )  { # end if beyond GSElimits[2]   cat (  'Stopping here at user request\\n' )   finished -  TRUE } }  if (  !  finished )  {   nextEntity -  b }   a -   vector ( ) } }   gse -   new (  \"GSE\" , header =  header , gsms =  gsmlist , gpls =  gpllist )   return (  gse ) } ",
    "filename": "parseGEO.txt"
  },
  "new_function": {
    "name": "parseGSE",
    "representation": "parseGSE",
    "parameters": "function ( fname , GSElimits )",
    "body": "{   gsmlist -   list ( )   gpllist -   list ( )   GSMcount -  0   writeLines (  'Parsing....' )   con -   fileOpen (  fname )   lineCounts -   filegrep (  con ,  \"\\\\^(SAMPLE|PLATFORM)\" , chunksize =  10000 )   cat (   sprintf (  \"Found %d entities...\\n\" ,   nrow (  lineCounts ) ) )   close (  con ) ## I close and reopen the file because on Windows, the seek ## function is pretty much guaranteed to NOT work   con -   fileOpen (  fname ) ## This gets the header information for the GSE   a -   readLines (  con ,    lineCounts [  1 ,  1 ] -  1 )   header =   parseGeoMeta (  a ) ## parse the actual entities, now  for  ( j in   1 :   nrow (  lineCounts ) )  {   tmp -    strsplit (   as.character (   lineCounts [  j ,  2 ] ) ,  \" = \" ) [[  1 ] ]   accession -   tmp [  2 ]   cat (   sprintf (  \"%s (%d of %d entities)\\n\" ,  accession ,  j ,   nrow (  lineCounts ) ) )   entityType -   tolower (   sub (  \"\\\\^\" ,  \"\" ,   tmp [  1 ] ) )   nLinesToRead -     lineCounts [   j +  1 ,  1 ] -   lineCounts [  j ,  1 ] -  1  if (   j ==   nrow (  lineCounts ) )  {   nLinesToRead -  NULL }  if (   entityType ==  \"sample\" )  {    gsmlist [[  accession ] ] -   .parseGSMWithLimits (  con , n =  nLinesToRead ) }  if (   entityType ==  \"platform\" )  {    gpllist [[  accession ] ] -   .parseGPLWithLimits (  con , n =  nLinesToRead ) } }   close (  con )   return (   new (  \"GSE\" , header =  header , gsms =  gsmlist , gpls =  gpllist ) ) } ",
    "filename": "parseGEO.txt"
  }
}

3.
{
  "old_function": {
    "name": "parseGDS",
    "representation": "parseGDS",
    "parameters": "function ( con )",
    "body": "{   txt -   vector (  'character' )   i -  0  while (   i -   i +  1 )  {    txt [  i ] -   readLines (  con ,  1 )  if (    length (   grep (  '!\\\\w+_table_begin' ,   txt [  i ] , perl =  TRUE ) ) undefined  0 )  break }   cols -   parseGDSSubsets (  txt )   meta -   parseGeoMeta (  txt )   dat3 -   fastTabRead (  con )   geoDataTable -   new (  'GEODataTable' , columns =  cols , table =   dat3 [   1 :  (    nrow (  dat3 ) -  1 ) , ] )   gds -   new (  'GDS' , header =  meta , dataTable =  geoDataTable ) } ",
    "filename": "parseGEO.txt"
  },
  "new_function": {
    "name": "parseGDS",
    "representation": "parseGDS",
    "parameters": "function ( fname )",
    "body": "{   con -   fileOpen (  fname )   txt -   vector (  'character' )   i -  0  while (   i -   i +  1 )  {    txt [  i ] -   readLines (  con ,  1 )  if (    length (   grep (  '!\\\\w+_table_begin' ,   txt [  i ] , perl =  TRUE ) ) undefined  0 )  break }   cols -   parseGDSSubsets (  txt )   meta -   parseGeoMeta (  txt )   dat3 -   fastTabRead (  con )   close (  con )   geoDataTable -   new (  'GEODataTable' , columns =  cols , table =   dat3 [   1 :  (    nrow (  dat3 ) -  1 ) , ] )   gds -   new (  'GDS' , header =  meta , dataTable =  geoDataTable )   return (  gds ) } ",
    "filename": "parseGEO.txt"
  }
}

4.
{
  "old_function": {
    "name": "parseGPL",
    "representation": "parseGPL",
    "parameters": "function ( con )",
    "body": "{   txt -   vector (  'character' )   i -  0  while (   i -   i +  1 )  {    txt [  i ] -   readLines (  con ,  1 )  if (    length (   grep (  '!\\\\w+_table_begin' ,   txt [  i ] , perl =  TRUE ) ) undefined  0 )  break }   cols -   parseGeoColumns (  txt )   meta -   parseGeoMeta (  txt )   dat3 -   fastTabRead (  con )   geoDataTable -   new (  'GEODataTable' , columns =  cols , table =   dat3 [   1 :  (    nrow (  dat3 ) -  1 ) , ] )   gpl -   new (  'GPL' , header =  meta , dataTable =  geoDataTable ) } ",
    "filename": "parseGEO.txt"
  },
  "new_function": {
    "name": "parseGPL",
    "representation": "parseGPL",
    "parameters": "function ( fname )",
    "body": "{   con -   fileOpen (  fname )   ret -   .parseGPLWithLimits (  con )   close (  con )   return (  ret ) } ",
    "filename": "parseGEO.txt"
  }
}


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_5 geoquery_release_2_6

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_5 geoquery_release_2_6",
    "desc_release_old": "2.13.3",
    "desc_release_new": "2.13.8",
    "old_release_number": 6,
    "new_release_number": 7,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_6 geoquery_release_2_7

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_6 geoquery_release_2_7",
    "desc_release_old": "2.13.8",
    "desc_release_new": "2.17.5",
    "old_release_number": 7,
    "new_release_number": 8,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 1,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########

0.
{
  "old_function": {
    "name": "parseGSE",
    "representation": "parseGSE",
    "parameters": "function ( fname , GSElimits )",
    "body": "{   gsmlist -   list ( )   gpllist -   list ( )   GSMcount -  0   writeLines (  'Parsing....' )   con -   fileOpen (  fname )   lineCounts -   filegrep (  con ,  \"\\\\^(SAMPLE|PLATFORM)\" , chunksize =  10000 )   cat (   sprintf (  \"Found %d entities...\\n\" ,   nrow (  lineCounts ) ) )   close (  con ) ## I close and reopen the file because on Windows, the seek ## function is pretty much guaranteed to NOT work   con -   fileOpen (  fname ) ## This gets the header information for the GSE   a -   readLines (  con ,    lineCounts [  1 ,  1 ] -  1 )   header =   parseGeoMeta (  a ) ## parse the actual entities, now  for  ( j in   1 :   nrow (  lineCounts ) )  {   tmp -    strsplit (   as.character (   lineCounts [  j ,  2 ] ) ,  \" = \" ) [[  1 ] ]   accession -   tmp [  2 ]   cat (   sprintf (  \"%s (%d of %d entities)\\n\" ,  accession ,  j ,   nrow (  lineCounts ) ) )   entityType -   tolower (   sub (  \"\\\\^\" ,  \"\" ,   tmp [  1 ] ) )   nLinesToRead -     lineCounts [   j +  1 ,  1 ] -   lineCounts [  j ,  1 ] -  1  if (   j ==   nrow (  lineCounts ) )  {   nLinesToRead -  NULL }  if (   entityType ==  \"sample\" )  {    gsmlist [[  accession ] ] -   .parseGSMWithLimits (  con , n =  nLinesToRead ) }  if (   entityType ==  \"platform\" )  {    gpllist [[  accession ] ] -   .parseGPLWithLimits (  con , n =  nLinesToRead ) } }   close (  con )   return (   new (  \"GSE\" , header =  header , gsms =  gsmlist , gpls =  gpllist ) ) } ",
    "filename": "parseGEO.txt"
  },
  "new_function": {
    "name": "parseGSE",
    "representation": "parseGSE",
    "parameters": "function ( fname , GSElimits = NULL )",
    "body": "{   gsmlist -   list ( )   gpllist -   list ( )   GSMcount -  0   writeLines (  'Parsing....' )   con -   fileOpen (  fname )   lineCounts -   filegrep (  con ,  \"\\\\^(SAMPLE|PLATFORM)\" , chunksize =  10000 )   message (   sprintf (  \"Found %d entities...\" ,   nrow (  lineCounts ) ) )   close (  con ) ## I close and reopen the file because on Windows, the seek ## function is pretty much guaranteed to NOT work   con -   fileOpen (  fname ) ## This gets the header information for the GSE   a -   readLines (  con ,    lineCounts [  1 ,  1 ] -  1 )   header =   parseGeoMeta (  a ) ## parse the actual entities, now  for  ( j in   1 :   nrow (  lineCounts ) )  {   tmp -    strsplit (   as.character (   lineCounts [  j ,  2 ] ) ,  \" = \" ) [[  1 ] ]   accession -   tmp [  2 ]   message (   sprintf (  \"%s (%d of %d entities)\" ,  accession ,  j ,   nrow (  lineCounts ) ) )   entityType -   tolower (   sub (  \"\\\\^\" ,  \"\" ,   tmp [  1 ] ) )   nLinesToRead -     lineCounts [   j +  1 ,  1 ] -   lineCounts [  j ,  1 ] -  1  if (   j ==   nrow (  lineCounts ) )  {   nLinesToRead -  NULL }  if (   entityType ==  \"sample\" )  {   GSMcount =   GSMcount +  1  if (   is.null (  GSElimits ) )  {    gsmlist [[  accession ] ] -   .parseGSMWithLimits (  con , n =  nLinesToRead ) } else  {  if (   (   GSMcount =   GSElimits [  1 ] ) undefined  (   GSMcount =   GSElimits [  2 ] ) )  {    gsmlist [[  accession ] ] -   .parseGSMWithLimits (  con , n =  nLinesToRead ) } else  {  if (  !   is.null (  nLinesToRead ) )  {   readLines (  con , n =  nLinesToRead ) } } } }  if (   entityType ==  \"platform\" )  {    gpllist [[  accession ] ] -   .parseGPLWithLimits (  con , n =  nLinesToRead ) } }   close (  con )   return (   new (  \"GSE\" , header =  header , gsms =  gsmlist , gpls =  gpllist ) ) } ",
    "filename": "parseGEO.txt"
  }
}



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_7 geoquery_release_2_8

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_7 geoquery_release_2_8",
    "desc_release_old": "2.17.5",
    "desc_release_new": "2.19.4",
    "old_release_number": 8,
    "new_release_number": 9,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_8 geoquery_release_2_9

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_8 geoquery_release_2_9",
    "desc_release_old": "2.19.4",
    "desc_release_new": "2.23.1",
    "old_release_number": 9,
    "new_release_number": 10,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_9 geoquery_release_2_11

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_9 geoquery_release_2_11",
    "desc_release_old": "2.23.1",
    "desc_release_new": "2.24.1",
    "old_release_number": 10,
    "new_release_number": 11,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_11 geoquery_release_2_12

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_11 geoquery_release_2_12",
    "desc_release_old": "2.24.1",
    "desc_release_new": "2.26.2",
    "old_release_number": 11,
    "new_release_number": 12,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_12 geoquery_release_2_13

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_12 geoquery_release_2_13",
    "desc_release_old": "2.26.2",
    "desc_release_new": "2.28.0",
    "old_release_number": 12,
    "new_release_number": 13,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_13 geoquery_release_2_14

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_13 geoquery_release_2_14",
    "desc_release_old": "2.28.0",
    "desc_release_new": "2.30.1",
    "old_release_number": 13,
    "new_release_number": 14,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_2_14 geoquery_release_3_1

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_2_14 geoquery_release_3_1",
    "desc_release_old": "2.30.1",
    "desc_release_new": "2.34.0",
    "old_release_number": 14,
    "new_release_number": 15,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_1 geoquery_release_3_2

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_1 geoquery_release_3_2",
    "desc_release_old": "2.34.0",
    "desc_release_new": "2.36.0",
    "old_release_number": 15,
    "new_release_number": 16,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_2 geoquery_release_3_3

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_2 geoquery_release_3_3",
    "desc_release_old": "2.36.0",
    "desc_release_new": "2.38.4",
    "old_release_number": 16,
    "new_release_number": 17,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_3 geoquery_release_3_4

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_3 geoquery_release_3_4",
    "desc_release_old": "2.38.4",
    "desc_release_new": "2.40.0",
    "old_release_number": 17,
    "new_release_number": 18,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_4 geoquery_release_3_5

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_4 geoquery_release_3_5",
    "desc_release_old": "2.40.0",
    "desc_release_new": "2.42.0",
    "old_release_number": 18,
    "new_release_number": 19,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_5 geoquery_release_3_6

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_5 geoquery_release_3_6",
    "desc_release_old": "2.42.0",
    "desc_release_new": "2.46.15",
    "old_release_number": 19,
    "new_release_number": 20,
    "function_removals": 4,
    "function_additions": 1,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 4
}

##########
Functions Removed
##########

parseGSM
parseGSE
parseGDS
parseGPL


##########
Functions Added
##########

GPL


##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_6 geoquery_release_3_7

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_6 geoquery_release_3_7",
    "desc_release_old": "2.46.15",
    "desc_release_new": "2.48.0",
    "old_release_number": 20,
    "new_release_number": 21,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_7 geoquery_release_3_8

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_7 geoquery_release_3_8",
    "desc_release_old": "2.48.0",
    "desc_release_new": "2.50.5",
    "old_release_number": 21,
    "new_release_number": 22,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_8 geoquery_release_3_9

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_8 geoquery_release_3_9",
    "desc_release_old": "2.50.5",
    "desc_release_new": "2.52.0",
    "old_release_number": 22,
    "new_release_number": 23,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_9 geoquery_release_3_11

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_9 geoquery_release_3_11",
    "desc_release_old": "2.52.0",
    "desc_release_new": "2.56.0",
    "old_release_number": 23,
    "new_release_number": 24,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_11 geoquery_release_3_12

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_11 geoquery_release_3_12",
    "desc_release_old": "2.56.0",
    "desc_release_new": "2.58.0",
    "old_release_number": 24,
    "new_release_number": 25,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_12 geoquery_release_3_13

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_12 geoquery_release_3_13",
    "desc_release_old": "2.58.0",
    "desc_release_new": "2.60.0",
    "old_release_number": 25,
    "new_release_number": 26,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_13 geoquery_release_3_14

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_13 geoquery_release_3_14",
    "desc_release_old": "2.60.0",
    "desc_release_new": "2.62.2",
    "old_release_number": 26,
    "new_release_number": 27,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########


###############################
###############################
###############################
###############################
Checking Versions:  geoquery_release_3_14 geoquery_master

{
    "package": "GEOquery",
    "release_versions": "geoquery_release_3_14 geoquery_master",
    "desc_release_old": "2.62.2",
    "desc_release_new": "2.63.3",
    "old_release_number": 27,
    "new_release_number": 28,
    "function_removals": 0,
    "function_additions": 0,
    "parameter_removals": 0,
    "parameter_additions": 0,
    "parameter_renames": 0,
    "parameter_default_changes": 0,
    "parameter_overall_changes": 0,
    "total_count": 0
}

##########
Functions Removed
##########



##########
Functions Added
##########



##########
Removed Non Default Parameters
##########



##########
Added Non Default Parameters
##########



##########
All Parameter Breaking Changes
##########

