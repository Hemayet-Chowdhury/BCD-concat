% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isOutlier.R
\name{isOutlier}
\alias{isOutlier}
\title{Identify outlier values}
\usage{
isOutlier(metric, nmads = 5, type = c("both", "lower", "higher"),
  log = FALSE, subset = NULL, batch = NULL, min_diff = NA)
}
\arguments{
\item{metric}{Numeric vector of values.}

\item{nmads}{A numeric scalar, specifying the minimum number of MADs away from median required for a value to be called an outlier.}

\item{type}{String indicating whether outliers should be looked for at both tails (\code{"both"}), only at the lower tail (\code{"lower"}) or the upper tail (\code{"higher"}).}

\item{log}{Logical scalar, should the values of the metric be transformed to the log10 scale before computing MADs?}

\item{subset}{Logical or integer vector, which subset of values should be used to calculate the median/MAD? 
If \code{NULL}, all values are used.
Missing values will trigger a warning and will be automatically ignored.}

\item{batch}{Factor of length equal to \code{metric}, specifying the batch to which each observation belongs. 
A median/MAD is calculated for each batch, and outliers are then identified within each batch.}

\item{min_diff}{A numeric scalar indicating the minimum difference from the median to consider as an outlier. 
The outlier threshold is defined from the larger of \code{nmads} MADs and \code{min_diff}, to avoid calling many outliers when the MAD is very small. 
If \code{NA}, it is ignored.}
}
\value{
A logical vector of the same length as the \code{metric} argument, specifying the observations that are considered as outliers.
}
\description{
Convenience function to determine which values in a numeric vector are outliers based on the median absolute deviation (MAD).
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
example_sce <- SingleCellExperiment(
    assays = list(counts = sc_example_counts), 
    colData = sc_example_cell_info
)
example_sce <- calculateQCMetrics(example_sce)

## with a set of feature controls defined
example_sce <- calculateQCMetrics(example_sce, 
feature_controls = list(set1 = 1:40))
isOutlier(example_sce$total_counts, nmads = 3)

}
\author{
Aaron Lun
}
